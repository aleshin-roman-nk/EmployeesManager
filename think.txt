>>>
05-10-2019
Написать генератор sql-запросов создания таблиц для sqlite на основе сущности.
Или генерация и класса сущности и sql запроса по набору полей сущности.

>>>
13-10-2019
Можно писать в виде JSON формата описание сущности класса, по которому генерируется класс и sql-запрос создания таблицы

>>>
20-02-2020 11-50
Основные подходы реализации очереди объектов:
	1. Связанный список
	2. Массив объектов, перемещение между которыми посредством изменения текущего индекса.

>>>
Кроме идеи составного компонента grid + panel, может доктрина, что каждому типу объекта соответствует своя панель,
	включающая и сетку и панель(ли).

>>>
Система команд.
	* Таблица команд содержится в маршрутизаторе
	* Маршрутизатор находится между презентером и моделями
		Как определить обратный ответ?
	
	Другой вариант - если много панелек с множеством запросов, нажатий команд,
		тогда маршрутизация - часть механизма внутри части IView.
******************************************

Нажатие пункта таблицы
Вход в объект
Параметры объекта -> запрос на содержимое этого объекта
Имеем загруженный объект, в которого хотим войти
Привязать данные и отобразить панель работы с содержимым объекта, в которого вошли
Алгоритм работы:
	
PanelController получил событие войти в текущие объект текущей Panel
PanelController 

>>>
21-02-2020 20-46
Panel взывает к PanelController и тот решает какую показать,
PanelController требует Control - контейнер, куда будет выводить нужную Panel


Основные подходы к механике переключения видов:
1. Объект состояния текущего элемента находится в разделе модели (BL)
2. Объект состояния текущего элемента находится в разделе view
	В этом случае формируется ...
	
В общем - должен быть какой то объект 

>>>!!!
Панель получает объект, который она должна работать (показ, команды чего отредактировать)
	! У панели должен быть набор свойств и команд-событий
	! Панель может принимать сетку, в которую рисут коллекцию.
	!!! НО главный объект, содержащий систему переменных, в том числе коллекцию хранится в данной панели
	
Теперь нужно продумать, кто будет ловить события-запросы от панели и каким образом передавать ответ.
	Дело в том, что событие может быть собственное панели, а может направленно контреллеру-контейнеру
		вывести подходящую панель для работы с выбранным объектом коллекции.
		
Кажется в данном случае нерационально делать сложный механизм роутинга, так ка панелей мало.
	Вот если бы панелей (и типов объектов, с которыми работает каждая панель) было бы очень много,
		вот тагда можно делать механизм роутинга запросов, так как нецелесообразно писать миллион
			событий и методом IView.SetXXXX();
Как вспомогательная штука, каждая сущность может содержать строку имени типа.
Из чего вообще состоит запрос?
	- тип данных.
	- параметры выборки.
Можно применять теги признака вида запроса-ответа.

>>>!!!
А может не на Panel акцентироваться а невидимый объект, который может имет панель или не иметь,
		но требует к примеру IGridPanel для функционарования.
		

Все интерфейсние метода для презентера в MainView
Интерфейсное взаимодействие Presenter - View		
		

Разработать программку финансовой картины.
	Работа с месяцем. Ввод наличного положения. Отдельным блоком действующие долги (не привязанны к месяцу).
	В течение месяца вносить поступления и расходы.

Разрабатывая, чтобы не блуждать, необходимо привести весь список требований и используемых данных.

>>>
22-02-2020 12-47
Думаю, зачем годы, месяцы отдельными таблицами, когда можно сделать объект ГОД.МЕСЯЦ в виде контрола выбора объекта
	И работать с объктом МЕСЯЦ.
Таким образом Только две сущности:
	- Документ
	- Работа по документу
Документ содержит дату и по этому свойству формируем сущность месяц.

>>>
22-02-2020 14-20
некоторые панели могут запрашивать данные из других панелей. Это все части одной view
     все они клеютятся через интерфейсы. Или через свойства. PanelA.PanelB = panelB;
	 
>>>
22-02-2020 15-25
Делаем просто - два режима - дакументы, работы документа
не нужно контроллер панелей.
основная функция - установка начислений удобнее, чем сделал:
	создать документ в месяце
	добавить работу из базы работ.
	КСТАТИ - так как работаем с объектом месяц, в него можно добавлять абонентские расчеты, доп переменные,
		которые считают кол смен и т.д.ы
		или переменные месяца, такие как кол раб дней.
		в таком случае нам нужна сущность месяца.

>>>
28-02-2020 23-19
Кажется логичным presenter помещать с решением BL и через интерфейсы работать с IView.
		Таким образом можно менять "лицо" WinForm или Web интерфейс и т.д.
		В одном решении может общий проект с доменной моделью и доступом к БД (Domain model & db access), несколько проектов с BL и презентером (BL & presenter) все это back-end и несколько проектов с реализацией IView и это front-end
			Но можно совместить DA, Momain model & presenter в одном проекте (BACK - END) и проект front - end. Объявление IView содержится в проекте back - end.
				Далее создаем front - end и пристегиваем к back - end. Запускаемый проект является с front - end.
		Круто получается, сколько времени я обсасывал MVP. Так же нужно обсасывать другие архитектурные паттерны и развиваться в других интересных идеях.
			Например написать свой компилятор - транслятор в ассемблерный код. Или написать выполнение ассемблерного кода.
	
			